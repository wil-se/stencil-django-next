version: '3.9'

services:

  nginx:
    build: ./nginx/
    restart: always
    volumes:
      - uwsgi_data:/tmp/uwsgi/
      - web_static:/var/www/backend/assets/:ro
    ports:
      - "8000:80"
    depends_on: 
      - django

  database:
    restart: always
    image: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - database:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - "5432"
    networks:
      - djangonetwork

  redis:
    image: redis:latest
    expose:
      - "6379"
    volumes:
        - ./config/redis.conf:/redis.conf
    networks:
      - djangonetwork
    command: [ "redis-server", "/redis.conf" ]

  celery:
    restart: always
    build:
      context: ./backend/
    command: celery -A backend worker -l INFO
    volumes:
      - app:/home/backend
    env_file:
      - ./.env.dev
    networks:
      - djangonetwork
    depends_on:
      - database
      - redis
      - django

  django:
    build: ./backend/
    restart: always
    command: >
      sh -c "python manage.py makemigrations
      && python manage.py migrate
      && python manage.py collectstatic --noinput 
      && uwsgi --ini uwsgi.ini"
    volumes:
      - uwsgi_data:/tmp/uwsgi/
      - web_static:/home/backend/static
      - app:/home/backend
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=database
    networks:
      - djangonetwork
    depends_on:
      - database
      - redis

networks:
  djangonetwork:
      driver: bridge

volumes:
  uwsgi_data:
  web_static:
  database:
  redis:
  app: